type vacation {
  id: String!
  startDate: Int!
  durationHours: Float!
  approved: Boolean!
  cancelled: Boolean!
}

input vacationRequest {
  userID: String!
  startDate: Int!
  durationHours: Float!
}

scalar Bytes

type document {
  id: String!
  userID: String
  fileName: String!
	data     : Bytes
	createdAt: Int!
}

type employee {
  id: String!
  badgeNumber: Int!
  firstName: String!
  lastName: String!
  countryCode: String!
  vacationAccrualRate: Float!
  vacationAccrued: Float!
  vacations: [vacation]
  documents: [String]!
}

input employeeInput {
  badgeNumber: Int!
  firstName: String!
  lastName: String!
  countryCode: String!
  vacationAccrualRate: Float!
  vacationAccrued: Float!
}

type employeeSaveResult {
  savedEmployees: [employee!]!
  errors: String
}

scalar Upload

type Query {
  employees: [employee!]!
  employee (id: String!): employee
  attachment(id: String!): document
  
}

type Mutation {
  addEmployee (employee: employeeInput!): employee!
	addEmployees (employees: [employeeInput!]!): employeeSaveResult!
  addAttachment (userID: String!, file: Upload!): document!
  updateEmployee (userID: String!, employee: employeeInput!): employee!
  deleteEmployee (userID: String!): employee!

  addVacation (vacation: vacationRequest!): vacation! 
}

schema {
  query: Query
  mutation: Mutation
}
